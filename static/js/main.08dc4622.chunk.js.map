{"version":3,"sources":["db.js","app/SortForm.jsx","app/Table.jsx","app/Pagination.jsx","App.jsx","index.js"],"names":["data","date","points","name","distance","SortForm","filterSubmit","onReset","useState","column","setColumn","condition","setCondition","inputField","setInputField","className","onSubmit","e","preventDefault","value","onChange","target","required","type","placeholder","onClick","Table","map","user","index","Pagination","currentPage","pageCount","onChoosePage","pages","i","push","page","App","sortData","setSortData","sortBox","filterColumn","undefined","filterCondition","filterInputValue","sortConfig","setSortConfig","renderData","setRenderData","Math","ceil","length","pagesConfig","setPagesConfig","console","log","useEffect","filter","includes","Number","toString","slice","config","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.08dc4622.chunk.js","sourcesContent":["export const data = [\r\n  {\r\n    date: 1999,\r\n    points: 5,\r\n    name: 'Алексей',\r\n    distance: 41\r\n  },\r\n  {\r\n    date: 2013,\r\n    points: 2,\r\n    name: 'Иван',\r\n    distance: 23\r\n  },\r\n  {\r\n    date: 2001,\r\n    points: 5,\r\n    name: 'Андрей',\r\n    distance: 22\r\n  },\r\n  {\r\n    date: 2002,\r\n    points: 3,\r\n    name: 'Владимир',\r\n    distance: 55\r\n  },\r\n  {\r\n    date: 2009,\r\n    points: 7,\r\n    name: 'Игорь',\r\n    distance: 66\r\n  },\r\n  {\r\n    date: 2005,\r\n    points: 8,\r\n    name: 'Анна',\r\n    distance: 23\r\n  },\r\n  {\r\n    date: 2007,\r\n    points: 15,\r\n    name: 'Виктория',\r\n    distance: 88\r\n  },\r\n  {\r\n    date: 2006,\r\n    points: 5,\r\n    name: 'Юрий',\r\n    distance: 41\r\n  },\r\n  {\r\n    date: 2005,\r\n    points: 34,\r\n    name: 'Татьяна',\r\n    distance: 44\r\n  },\r\n  {\r\n    date: 2007,\r\n    points: 22,\r\n    name: 'Станислав',\r\n    distance: 55\r\n  },\r\n  {\r\n    date: 2009,\r\n    points: 11,\r\n    name: 'Валентин',\r\n    distance: 66\r\n  },\r\n  {\r\n    date: 2010,\r\n    points: 24,\r\n    name: 'Варвара',\r\n    distance: 56\r\n  },\r\n  {\r\n    date: 2011,\r\n    points: 12,\r\n    name: 'Анатолий',\r\n    distance: 34\r\n  },\r\n  {\r\n    date: 2006,\r\n    points: 14,\r\n    name: 'Алла',\r\n    distance: 23\r\n  },\r\n  {\r\n    date: 2007,\r\n    points: 15,\r\n    name: 'Алина',\r\n    distance: 12\r\n  },\r\n  {\r\n    date: 2011,\r\n    points: 10,\r\n    name: 'Григорий',\r\n    distance: 56\r\n  },\r\n  {\r\n    date: 2011,\r\n    points: 25,\r\n    name: 'Галина',\r\n    distance: 43\r\n  },\r\n  {\r\n    date: 2020,\r\n    points: 55,\r\n    name: 'Даниил',\r\n    distance: 32\r\n  },\r\n\r\n];\r\n","import React, {useState} from 'react';\r\n\r\nfunction SortForm({ filterSubmit, onReset }) {\r\n    const [ column, setColumn ] = useState('');\r\n    const [ condition, setCondition ] = useState('');\r\n    const [ inputField, setInputField ] = useState('');\r\n\r\n    function handleColumnChange(e) {\r\n        setColumn(e.target.value)\r\n    }\r\n\r\n    function handleConditionChange(e) {\r\n        setCondition(e.target.value)\r\n    }\r\n\r\n    function handleInputFieldChange(e) {\r\n        setInputField(e.target.value)\r\n    }\r\n\r\n    function onClearFilter() {\r\n        setColumn('');\r\n        setCondition('');\r\n        setInputField('');\r\n        onReset();\r\n    }\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        filterSubmit({ column, condition, inputField });\r\n    }\r\n\r\n    return (\r\n        <form className=\"table-form\" onSubmit={handleSubmit}>\r\n            <select name=\"column\" value={column} onChange={handleColumnChange} required>\r\n                <option value=\"\"></option>\r\n                <option value=\"name\">Имя</option>\r\n                <option value=\"points\">Количество</option>\r\n                <option value=\"distance\">Расстояние</option>\r\n            </select>\r\n            <select name=\"condition\" value={condition} onChange={handleConditionChange} required>\r\n                <option value=\"\"></option>\r\n                <option value=\"equal\">Равно</option>\r\n                <option value=\"contain\">Содержит</option>\r\n                <option value=\"greater\">Больше</option>\r\n                <option value=\"less\">Меньше</option>\r\n            </select>\r\n            <input\r\n                name=\"inputField\"\r\n                value={inputField}\r\n                onChange={handleInputFieldChange}\r\n                type=\"text\"\r\n                placeholder=\"Значение\"\r\n                required\r\n            />\r\n            <button className=\"table-form__button\" type=\"reset\" onClick={onClearFilter}>\r\n                Сброс\r\n            </button>\r\n            <button className=\"table-form__button\" type=\"submit\">\r\n                Фильтр\r\n            </button>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default SortForm;\r\n","import React from 'react';\r\n\r\nfunction Table({data}) {\r\n    return (\r\n        <table className=\"table\">\r\n            <thead className=\"table__head\">\r\n            <tr className=\"table__row\">\r\n                <th>Дата</th>\r\n                <th>\r\n                    Имя\r\n                </th>\r\n                <th>\r\n                    Количество\r\n                </th>\r\n                <th>\r\n                    Расстояние\r\n                </th>\r\n            </tr>\r\n            </thead>\r\n\r\n            <tbody>\r\n            {data.map((user, index) => (\r\n                <tr key={index}>\r\n                    <td>{user.date}</td>\r\n                    <td >{user.name}</td>\r\n                    <td>{user.points}</td>\r\n                    <td>{user.distance}</td>\r\n                </tr>\r\n            ))}\r\n            </tbody>\r\n        </table>\r\n    );\r\n}\r\n\r\nexport default Table;\r\n","import React from 'react';\r\n\r\nconst Pagination = ({currentPage, pageCount, onChoosePage}) => {\r\n    const pages = [];\r\n\r\n    for (let i = 1; i <= pageCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    return (\r\n        <div className=\"paginator\">\r\n            {pages.map((page) => (\r\n                <span\r\n                    key={page}\r\n                    className={\r\n                        page === currentPage ? (\r\n                            'paginator__page paginator__page_active'\r\n                        ) : (\r\n                            'paginator__page'\r\n                        )\r\n                    }\r\n                    onClick={() => onChoosePage(page)}\r\n                >\r\n\t\t\t\t\t{page}\r\n\t\t\t\t</span>\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Pagination;\r\n","import React, {useEffect, useState} from 'react'\r\nimport './scss/app.scss';\r\n\r\nimport {data} from './db.js';\r\nimport SortForm from \"./app/SortForm\";\r\nimport Table from \"./app/Table\";\r\nimport Pagination from \"./app/Pagination\";\r\n\r\nfunction App() {\r\n    const [sortData, setSortData] = useState(data)\r\n    const [ sortConfig, setSortConfig ] = useState({\r\n        sortBox: 'name',\r\n        filterColumn: undefined,\r\n        filterCondition: undefined,\r\n        filterInputValue: undefined\r\n    });\r\n    const [ renderData, setRenderData ] = useState(sortData);\r\n    const [ pagesConfig, setPagesConfig ] = useState({\r\n        currentPage: 1,\r\n        pageCount: Math.ceil(sortData.length / 5)\r\n    });\r\n\r\n    function onFilterSubmit(config) {\r\n        console.log('config',config)\r\n        setSortConfig({\r\n            ...sortConfig,\r\n            filterColumn: config.column,\r\n            filterCondition: config.condition,\r\n            filterInputValue: config.inputField\r\n        });\r\n    }\r\nconsole.log(sortConfig)\r\n    function onResetHandle() {\r\n        setSortData([ ...data ]);\r\n        setPagesConfig({ ...pagesConfig, currentPage: 1 });\r\n    }\r\n\r\n    function onChoosePageHandler(page) {\r\n        setPagesConfig({ ...pagesConfig, currentPage: page });\r\n    }\r\n\r\n    useEffect(\r\n        () => {\r\n            if (sortConfig.filterColumn && sortConfig.filterCondition && sortConfig.filterInputValue) {\r\n                if (sortConfig.filterColumn === 'name') {\r\n                    if (sortConfig.filterCondition === 'equal')\r\n                        setSortData([\r\n                            ...sortData.filter((e) => e.name === sortConfig.filterInputValue)\r\n                        ]);\r\n                    if (sortConfig.filterCondition === 'contain')\r\n                        setSortData([\r\n                            ...sortData.filter((e) => e.name.includes(sortConfig.filterInputValue))\r\n                        ]);\r\n                    if (sortConfig.filterCondition === 'greater')\r\n                        setSortData([\r\n                            ...sortData.filter((e) => e.name.length > sortConfig.filterInputValue)\r\n                        ]);\r\n                    if (sortConfig.filterCondition === 'less')\r\n                        setSortData([\r\n                            ...sortData.filter((e) => e.name.length < sortConfig.filterInputValue)\r\n                        ]);\r\n                }\r\n                if (sortConfig.filterColumn === 'points') {\r\n                    if (sortConfig.filterCondition === 'equal')\r\n                        setSortData([\r\n                            ...sortData.filter(\r\n                                (e) => e.points === Number(sortConfig.filterInputValue)\r\n                            )\r\n                        ]);\r\n                    if (sortConfig.filterCondition === 'contain')\r\n                        setSortData([\r\n                            ...sortData.filter((e) =>\r\n                                e.points.toString().includes(sortConfig.filterInputValue)\r\n                            )\r\n                        ]);\r\n                    if (sortConfig.filterCondition === 'greater')\r\n                        setSortData([\r\n                            ...sortData.filter((e) => e.points > Number(sortConfig.filterInputValue))\r\n                        ]);\r\n                    if (sortConfig.filterCondition === 'less')\r\n                        setSortData([\r\n                            ...sortData.filter((e) => e.points < Number(sortConfig.filterInputValue))\r\n                        ]);\r\n                }\r\n                if (sortConfig.filterColumn === 'distance') {\r\n                    if (sortConfig.filterCondition === 'equal')\r\n                        setSortData([\r\n                            ...sortData.filter(\r\n                                (e) => e.distance === Number(sortConfig.filterInputValue)\r\n                            )\r\n                        ]);\r\n                    if (sortConfig.filterCondition === 'contain')\r\n                        setSortData([\r\n                            ...sortData.filter((e) =>\r\n                                e.distance.toString().includes(sortConfig.filterInputValue)\r\n                            )\r\n                        ]);\r\n                    if (sortConfig.filterCondition === 'greater')\r\n                        setSortData([\r\n                            ...sortData.filter(\r\n                                (e) => e.distance > Number(sortConfig.filterInputValue)\r\n                            )\r\n                        ]);\r\n                    if (sortConfig.filterCondition === 'less')\r\n                        setSortData([\r\n                            ...sortData.filter(\r\n                                (e) => e.distance < Number(sortConfig.filterInputValue)\r\n                            )\r\n                        ]);\r\n                }\r\n            }\r\n        },\r\n        [ sortConfig ]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            setPagesConfig({ ...pagesConfig, pageCount: Math.ceil(sortData.length / 5) });\r\n        },\r\n        [ sortData ]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            setRenderData(\r\n                sortData.slice(\r\n                    pagesConfig.currentPage === 1\r\n                        ? pagesConfig.currentPage - 1\r\n                        : (pagesConfig.currentPage - 1) * 5,\r\n                    pagesConfig.currentPage * 5\r\n                )\r\n            );\r\n        },\r\n        [ pagesConfig, sortData ]\r\n    );\r\n\r\n    return (\r\n        <div className=\"wrapper\">\r\n            <SortForm filterSubmit={onFilterSubmit} onReset={onResetHandle} />\r\n            <Table data={renderData}/>\r\n            <Pagination\r\n                currentPage={pagesConfig.currentPage}\r\n                pageCount={pagesConfig.pageCount}\r\n                onChoosePage={onChoosePageHandler}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}